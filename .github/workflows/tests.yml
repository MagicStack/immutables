name: Tests

on:
  push:
    branches:
      - master
      - ci
  pull_request:
    branches:
      - master

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        os: [windows-latest, ubuntu-latest, macos-latest]
        arch: [x64, x86]
        exclude:
          # 32-bit Python is only available on Windows
          - os: ubuntu-latest
            arch: x86
          - os: macos-latest
            arch: x86
          # https://github.com/actions/setup-python/issues/948
          - os: macos-latest
            arch: x64
            python-version: 3.8
          - os: macos-latest
            arch: x64
            python-version: 3.9
          - os: macos-latest
            arch: x64
            python-version: 3.10

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 50
        submodules: true

    - name: Check if release PR.
      uses: edgedb/action-release/validate-pr@master
      id: release
      with:
        github_token: ${{ secrets.RELEASE_BOT_GITHUB_TOKEN }}
        missing_version_ok: yes
        version_file: immutables/_version.py
        version_line_pattern: |
          __version__\s*=\s*(?:['"])([[:PEP440:]])(?:['"])

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      if: steps.release.outputs.version == 0
      env:
        PIP_DISABLE_PIP_VERSION_CHECK: 1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.arch }}

    - name: Test
      if: steps.release.outputs.version == 0
      run: |
        python -m pip install -U pip setuptools
        python -m pip install --verbose -e .[test]
        flake8 immutables/ tests/
        mypy immutables/
        python -m pytest -v

  # This job exists solely to act as the test job aggregate to be
  # targeted by branch policies.
  test-conclusion:
    name: "Test Conclusion"
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - run: echo OK
